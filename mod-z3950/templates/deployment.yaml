apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mod-z3950.fullname" . }}
  labels:
    {{- include "mod-z3950.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mod-z3950.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mod-z3950.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mod-z3950.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ["perl"]
          args: ["-I", "lib", "bin/z2folio", "-c", "etc/config", "--", "-f", "etc/yazgfs.xml", "-v-session"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.containerPort }}
              protocol: TCP
          volumeMounts:
            - name: zserver-config
              mountPath: /usr/src/app/etc/config.sul.json
              subPath: config.sul.json
          lifecycle:
            postStart:
              exec:
                command: ["cp", "/usr/src/app/etc/config.sul.json", "/usr/src/app/etc/config.Default.json"]
          {{- if or (eq .Values.livenessProbeEnabled nil) (.Values.livenessProbeEnabled) }}
          livenessProbe:
            httpGet:
              path: {{ if .Values.livenessProbe -}} {{ default "/admin/health" .Values.livenessProbe.path | quote }} {{- else -}} "/admin/health" {{- end }}
              port: {{ .Values.service.containerPort }}
            periodSeconds: {{ if .Values.livenessProbe -}} {{ default 90 .Values.livenessProbe.periodSeconds }} {{- else -}} 90 {{- end }}
            initialDelaySeconds: {{ if .Values.initialDelaySeconds -}} {{ default 5 .Values.livenessProbe.initialDelaySeconds }} {{- else -}} 5 {{- end }}
            timeoutSeconds: {{ if .Values.livenessProbe -}} {{ default 30 .Values.livenessProbe.timeoutSeconds }} {{- else -}} 30 {{- end }}
          {{- end }}
          env:
            - name: OKAPI_URL
              valueFrom:
                secretKeyRef:
                  key: OKAPI_URL
                  name: db-connect-modules
            - name: FOLIO_USER
              valueFrom:
                secretKeyRef:
                  key: OKAPI_READONLY_APP_USER
                  name: db-connect-modules
            - name: FOLIO_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: OKAPI_READONLY_APP_PASSWORD
                  name: db-connect-modules
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  key: DB_DATABASE
                  name: db-connect-modules
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  key: DB_HOST
                  name: db-connect-modules
            - name: DB_MAXPOOLSIZE
              value: {{ .Values.dbMaxPoolSize | quote }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: db-connect-modules
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  key: DB_PORT
                  name: db-connect-modules
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  key: DB_USERNAME
                  name: db-connect-modules
            - name: ENV
              valueFrom:
                secretKeyRef:
                  key: ENV
                  name: db-connect-modules
            - name: JAVA_OPTIONS
              value: {{ .Values.javaOptions | quote }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: zserver-config
        secret:
          secretName: zserver.conf
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
